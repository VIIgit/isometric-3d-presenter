.isometric-container {
  perspective: 1200px;
  perspective-origin: 50% 50%;
  transition: transform 0.2s ease-out;
  width: 100%;
  height: 100%;
  overflow: hidden;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: grab;
}

.isometric-container:active {
  cursor: grabbing;
}

.isometric-perspective {

  transform-style: preserve-3d;

  /* Hide initially until 3D transforms are ready */
  opacity: 0;
  
  /* Center the 3D content properly within the container */
  position: relative;

  /* Ensure the perspective element itself is centered and has a reasonable size */
  width: 600px;
  height: 400px;
  margin: auto;

  /* Performance optimizations to reduce flicker during dragging */
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
  transform-origin: center center;
  /* Prevent text and image selection */
  user-select: none;
  -webkit-user-select: none; /* Keep for older Safari/iOS */

  z-index: -1;
}

/* Make perspective visible after 3D transforms are applied with fade-in effect */
.isometric-perspective.ready {
  opacity: 1;
}

/* Smooth transition for keyboard navigation */
.isometric-perspective.smooth-transition {
  transition: transform 0.15s ease-out;
}

/* Create a centered coordinate system by offsetting the perspective center */
.isometric-perspective::before {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  width: 0;
  height: 0;
  pointer-events: none;
}

.scene {
  position: relative;
  width: 100px;
  height: 100px;
  transform-style: preserve-3d;
  transform-origin: center center;
  cursor: default;
  /* Performance optimizations */
  backface-visibility: hidden;
  -webkit-backface-visibility: hidden;
}

.face {
  position: absolute;
  width: 100px;
  height: 100px;
  display: flex;
  align-items: center;
  justify-content: center;

  cursor: default;
  /* Default cursor for faces */

  left: 50%;
  top: 50%;
  transform-style: preserve-3d;

  box-sizing: border-box;
  opacity: 0.9;
}

/* ========= WIREFRAME STYLES - Core 3D Structure ========= */

/* Navigation elements - show pointer cursor on hover */
[data-nav-xyz], [data-nav-zoom] {
  cursor: pointer !important;
}

[data-nav-xyz]:hover, [data-nav-zoom]:hover {
  cursor: pointer !important;
}



/* Animation variant - uncomment to add rotation animation */
/*
.isometric-perspective {
  animation: rotate3d 20s infinite linear;
}
*/
@keyframes rotate3d {
  0% {
    transform: rotateX(45.264deg) rotateY(5deg) rotateZ(-35deg);
  }

  25% {
    transform: rotateX(45.264deg) rotateY(95deg) rotateZ(55deg);
  }

  50% {
    transform: rotateX(45.264deg) rotateY(185deg) rotateZ(145deg);
  }

  75% {
    transform: rotateX(45.264deg) rotateY(275deg) rotateZ(235deg);
  }

  100% {
    transform: rotateX(45.264deg) rotateY(365deg) rotateZ(325deg);
  }
}

/* ========= COMPACT CONTROLS WITH GLASS EFFECT ========= */

/* Compact controls - Modern spherical controller */
.compact-controls {
  position: absolute;
  bottom: 10px;
  right: 10px;
  transform: translateY(10px);
  pointer-events: none;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: 99;
}

/* Show compact-controls only on hover */
.isometric-container:hover .compact-controls {
  opacity: 1;
  pointer-events: auto;
}

/* Hide keyboard-help by default */
.compact-controls .keyboard-help {
  display: none;
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  padding: 5px;
}

.control-sphere {
  display: flex;
  align-items: center;
  gap: 12px;
}

.sphere-container {
  position: relative;
  width: 40px;
  height: 40px;
  background: radial-gradient(circle at 30% 30%, rgba(255, 255, 255, 0.4), rgba(255, 255, 255, 0));
  border: 1px solid rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  display: flex;
  align-items: center;
  justify-content: center;
  box-shadow:
    inset 0 2px 4px rgba(255, 255, 255, 0.1),
    0px 0px 2px 0px #000000;

}

.center-dot {
  width: 8px;
  height: 8px;
  background: rgba(255, 255, 255, 0.7);
  border-radius: 50%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  box-shadow: 0 0 4px rgba(255, 255, 255, 0.4);
  cursor: pointer;
  pointer-events: auto;
  transition: all 0.2s ease;
}

.center-dot:hover {
  background: rgba(255, 255, 255, 0.9);
  box-shadow: 0 0 8px rgba(255, 255, 255, 0.6);
  transform: translate(-50%, -50%) scale(1.2);
}

.direction-indicator {
  position: absolute;
  width: 0;
  height: 0;
  opacity: 0.3;
  transition: all 0.2s ease;
  cursor: pointer;
  pointer-events: auto;
}

.direction-indicator:hover {
  opacity: 0.8;
  transform: scale(1.1);
}

.direction-indicator.up {
  top: 4px;
  left: 50%;
  transform: translateX(-50%);
  border-left: 4px solid transparent;
  border-right: 4px solid transparent;
  border-bottom: 6px solid rgba(255, 255, 255, 0.6);
}

.direction-indicator.down {
  bottom: 4px;
  left: 50%;
  transform: translateX(-50%);
  border-left: 4px solid transparent;
  border-right: 4px solid transparent;
  border-top: 6px solid rgba(255, 255, 255, 0.6);
}

.direction-indicator.left {
  left: 4px;
  top: 50%;
  transform: translateY(-50%);
  border-top: 4px solid transparent;
  border-bottom: 4px solid transparent;
  border-right: 6px solid rgba(255, 255, 255, 0.6);
}

.direction-indicator.right {
  right: 4px;
  top: 50%;
  transform: translateY(-50%);
  border-top: 4px solid transparent;
  border-bottom: 4px solid transparent;
  border-left: 6px solid rgba(255, 255, 255, 0.6);
}

.direction-indicator.partial {
  opacity: 0.6;
  filter: drop-shadow(0 0 2px rgba(255, 255, 255, 0.4));
}

.direction-indicator.active {
  opacity: 1;
  filter: drop-shadow(0 0 4px rgba(255, 255, 255, 0.8));
  transform: scale(1.2);
}

.direction-indicator.up.active {
  transform: translateX(-50%) scale(1.2);
  border-bottom-color: rgba(255, 255, 255, 0.9);
}

.direction-indicator.up:hover {
  transform: translateX(-50%) scale(1.1);
}

.direction-indicator.down.active {
  transform: translateX(-50%) scale(1.2);
  border-top-color: rgba(255, 255, 255, 0.9);
}

.direction-indicator.down:hover {
  transform: translateX(-50%) scale(1.1);
}

.direction-indicator.left.active {
  transform: translateY(-50%) scale(1.2);
  border-right-color: rgba(255, 255, 255, 0.9);
}

.direction-indicator.left:hover {
  transform: translateY(-50%) scale(1.1);
}

.direction-indicator.right.active {
  transform: translateY(-50%) scale(1.2);
  border-left-color: rgba(255, 255, 255, 0.9);
}

.direction-indicator.right:hover {
  transform: translateY(-50%) scale(1.1);
}

/* Zoom Controls */
.zoom-controls {
  display: flex;
  flex-direction: column;
  gap: 4px;
}

.zoom-button {
  background: rgba(255, 255, 255, 0.2);
  border: 1px solid rgba(255, 255, 255, 0.3);
  border-radius: 4px;
  color: white;
  cursor: pointer;
  font-size: 14px;
  font-weight: bold;
  height: 24px;
  width: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s ease;
  pointer-events: auto;
  user-select: none;
  box-shadow:
    inset 0 2px 4px rgba(255, 255, 255, 0.1),
    0px 0px 2px 0px #000000;
}

.zoom-button:hover {
  background: rgba(255, 255, 255, 0.3);
  transform: scale(1.1);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

.zoom-button:active {
  transform: scale(0.95);
  background: rgba(255, 255, 255, 0.4);
}

.zoom-in {
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
}

.zoom-out {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  border-top: none;
}

.help-button {
  background: rgba(255, 255, 255, 0.2);
  border: 1px solid rgba(255, 255, 255, 0.3);
  border-radius: 50%;
  color: white;
  cursor: pointer;
  font-size: 10px;
  font-weight: bold;
  height: 18px;
  width: 18px;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: all 0.2s ease;
  margin-left: auto;
  pointer-events: auto;
  position: relative;
  z-index: 100;
  box-shadow:
    inset 0 2px 4px rgba(255, 255, 255, 0.1),
    0px 0px 2px 0px #000000;
}

.help-button:hover {
  background: rgba(255, 255, 255, 0.3);
  transform: scale(1.1);
}

.compact-controls .keyboard-help {
  margin-top: 8px;
  padding-top: 8px;
  border-top: 1px solid rgba(255, 255, 255, 0.2);
  color: white;
  font-family: 'Arial', sans-serif;
  font-size: 10px;
  font-weight: 500;
  display: none;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
}

.compact-controls .keyboard-help.show {
  display: block;
  max-height: 200px;
  overflow-y: auto;
  pointer-events: auto;
}

/* Custom scrollbar for help panel */
.compact-controls .keyboard-help::-webkit-scrollbar {
  width: 4px;
}

.compact-controls .keyboard-help::-webkit-scrollbar-track {
  background: rgba(255, 255, 255, 0.1);
  border-radius: 2px;
}

.compact-controls .keyboard-help::-webkit-scrollbar-thumb {
  background: rgba(255, 255, 255, 0.3);
  border-radius: 2px;
}

.compact-controls .keyboard-help::-webkit-scrollbar-thumb:hover {
  background: rgba(255, 255, 255, 0.5);
}

.compact-controls .keyboard-help h3 {
  margin: 0 0 6px 0;
  font-size: 10px;
  color: white;
  text-align: center;
  font-weight: 500;
  opacity: 0.9;
}

.key-mapping {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin: 3px 0;
  padding: 3px 6px;
  font-size: 9px;
  border-radius: 4px;
  background: rgba(255, 255, 255, 0.08);
  backdrop-filter: blur(5px);
  -webkit-backdrop-filter: blur(5px);
  border: 1px solid rgba(255, 255, 255, 0.1);
}

.key-mapping span:first-child {
  opacity: 0.8;
}

.key-mapping span:last-child {
  opacity: 0.9;
  font-weight: 500;
}

.key {
  background: rgba(255, 255, 255, 0.25);
  border: 1px solid rgba(255, 255, 255, 0.4);
  border-radius: 3px;
  padding: 1px 4px;
  font-size: 8px;
  color: white;
  display: inline-block;
  min-width: 12px;
  text-align: center;
  font-weight: 600;
  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
  margin: 0 1px;
}

/* ========= NAVIGATION GLASS OVERLAY EFFECT ========= */

.nav-clickable {
  position: relative;
  cursor: pointer;
  transition: all 0.3s ease;
}

.nav-clickable::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(135deg,
      rgba(255, 255, 255, 0.1) 0%,
      rgba(255, 255, 255, 0) 50%,
      rgba(255, 255, 255, 0.1) 100%);
  border: 2px solid rgba(255, 3, 3, 0.8);
  border-radius: 5px;
  opacity: 0;
  transition: all 0.3s ease;
  pointer-events: none;
  z-index: 10;
  transform: translateZ(5px);
  box-shadow:
    inset 0 1px 0 rgba(255, 255, 255, 0.3),
    inset 0 -1px 0 rgba(0, 0, 0, 0.1),
    0 4px 8px rgba(0, 0, 0, 0.1);
}

.nav-clickable:hover::before {
  opacity: 1;
  transform: translateZ(15px) scale(1.02);
}

.nav-clickable:active::before {
  opacity: 0.8;
  transform: translateZ(5px) scale(0.98);
}

/* Enhanced glass effect for faces */
.face.nav-clickable::before, .scene.nav-clickable::before, .label.nav-clickable::before {
  border-radius: 6px;
  background: linear-gradient(135deg,
      rgba(255, 255, 255, 0.25) 0%,
      rgba(255, 255, 255, 0) 50%,
      rgba(255, 255, 255, 0.25) 100%);
}

/* Navigation indicator */
.nav-clickable::after {
  position: absolute;
  top: 2px;
  right: 2px;
  font-size: 10px;
  opacity: 0;
  transition: all 0.3s ease;
  z-index: 11;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);
}

.nav-clickable:hover::after {
  opacity: 0.8;
}

/* Navigation selected state */
.face.nav-selected,
.scene.nav-selected {
  outline: 2px solid rgba(255, 255, 255, 0.5);
  outline-offset: 2px;
  border-radius: 4px;
}

/* Shadow divs for elevated scenes */
.scene-shadow {
  position: absolute;
  pointer-events: none;
  z-index: -1;
  transform-style: preserve-3d;
  transform-origin: center center;

  /* No background or styling needed since we use box-shadow for the actual shadow */
  background: transparent;
  border: none;
}

/* ========= NAVIGATION BAR ========= */

/* Navigation Bar - Plain Circles Only */
.nav-bar {
  position: fixed;
  bottom: 30px;
  left: 50%;
  transform: translateX(-50%);
  z-index: 1000;
}

.nav-points-container {
  display: flex;
  align-items: center;
  gap: 12px;
}

.nav-point {
  width: 8px;
  height: 8px;
  background: rgba(255, 255, 255, 0.5);
  border-radius: 50%;
  cursor: pointer;
  flex-shrink: 0;
  border: none;
  outline: none;
  display: block;
  box-shadow: 0px 0px 2px 0px #000000;
}

.nav-point.active {
  background: rgba(255, 255, 255, 1);
}

/* Highlighting system for connectors and elements */
.connector-path,
.connector-marker,
.connector-animated-marker,
.face {
  transition: opacity 0.3s ease, stroke 0.3s ease, fill 0.3s ease;
}

/* When any element is highlighted, change non-highlighted connectors to gray and reduce opacity */
.isometric-perspective:has(.highlight) .connector-path:not(.highlight) {
  opacity: 0.1;
  stroke: #808080;
}

.isometric-perspective:has(.highlight) .connector-marker:not(.highlight),
.isometric-perspective:has(.highlight) .connector-animated-marker:not(.highlight) {
  opacity: 0.1;
  fill: #808080;
}

/* Don't dim scenes directly, as it would affect all child faces */
/* Instead, we'll dim only the faces of non-highlighted scenes */
.isometric-perspective:has(.highlight) .scene:not(.highlight) > .face {
  opacity: 0.2;
}

/* Dark mode variables */
:root {
  --nav-bg-light: rgba(255, 255, 255, 0.5);
  --nav-bg-active-light: rgba(255, 255, 255, 1);
  --nav-bg-dark: rgba(0, 0, 0, 0.5);
  --nav-bg-active-dark: rgba(0, 0, 0, 1);

  --control-bg-light: rgba(255, 255, 255, 0.3);
  --control-bg-dark: rgba(0, 0, 0, 0.3);
  --control-border-light: rgba(255, 255, 255, 0.15);
  --control-border-dark: rgba(0, 0, 0, 0.15);
}

/* Light mode (default) */
.nav-point {
  background: var(--nav-bg-light);
}

.nav-point.active {
  background: var(--nav-bg-active-light);
}